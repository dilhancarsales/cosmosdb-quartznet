name: Build and Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'src/Quartz.Spi.CosmosDbJobStore/Quartz.Spi.CosmosDbJobStore.csproj'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Tests require Azure Cosmos DB or Emulator - skip for CI builds
    # - name: Test
    #   run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack
      if: github.event_name == 'release'
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ./artifacts

    - name: Upload artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts/*.nupkg

  publish:
    name: Publish to NuGet
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts

    - name: Publish to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
